
def isLib=true
if (!isLib) {
    apply plugin: 'com.android.application'
}else {
    apply plugin: 'com.android.library'
}
//库的定义
//apply plugin: 'com.android.library'
//开启kontlin  apply plugin: 'kotlin-android'
//开启kontlin  apply plugin: 'kotlin-android-extensions'
import proguard.gradle.ProGuardTask
android {
    compileSdkVersion 28

    lintOptions {
        abortOnError false
    }
    defaultConfig {
        if (!isLib) {
            applicationId "com.shuiyinhuo.component"
        }
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        /*debug {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }*/
        debug {
            minifyEnabled true //代码混淆开关
            proguardFiles 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = '1.7'
        targetCompatibility = '1.7'
    }
    buildToolsVersion = '28.0.3'

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    //开启kontlin     implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    compile 'com.airbnb.android:lottie:2.1.0'
    //implementation files('libs/classes-dex2jar.jar')


}

def jarName="h5_bridge"

def classFrom='build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/'
def sdkDestinationPath = "libs";

task deleteBuild(type: Delete) {
    delete sdkDestinationPath +jarName + ".jar"
}


task makeJar(type:org.gradle.api.tasks.bundling.Jar, dependsOn: "build") {
    //指定生成的jar名
    baseName =jarName
    //从哪里打包class文件
    //from zipTree(classFrom)
    from([classFrom])

    //去掉不需要打包的目录和文件
    exclude('android/','androidx/','com/shuiyinhuo/component/BuildConfig.class', 'com/shuiyinhuo/component/R.class','com/pdftron/','com/airbnb/')
    //去掉R$开头的文件
    destinationDir = file(sdkDestinationPath)
    exclude{ it.name.startsWith('R$');}
}
makeJar.dependsOn(deleteBuild, build)